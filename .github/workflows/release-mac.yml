on:
  push:
    # tags:
    # - 'v*'

name: Upload Release Asset

jobs:
  build-on-linux:
    name: Get Package Version and upload Linux release asset
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2.2.1
        id: version
        with:
          cmd: 'jq .version package.json -r'
      - id: step1
        run: echo test=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]') >> $GITHUB_OUTPUT

  build-on-mac:
    needs: build-on-linux
    name: Upload Mac Release Asset
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{needs.build-on-linux.outputs.output1}}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.PACKAGE_VERSION }}
          release_name: ${{ steps.version.outputs.PACKAGE_VERSION }}
          draft: true
          prerelease: false
          files: Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.MAC.dmg.zip
      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   run: touch file.txt
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: file.txt
      #     asset_name: file.txt
      #     tag: ${{ steps.version.outputs.PACKAGE_VERSION }}
      #     overwrite: true
      #     body: "This is my release text"
