on:
  push:
    # tags:
    # - 'v*'

name: Upload Release Asset

jobs:
  build-on-linux:
    name: Get Package Version and upload Linux release asset

    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.PACKAGE_VERSION }}
    steps:
      - name: Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: echo "PACKAGE_VERSION=$(jq .version package.json -r)" >> $GITHUB_OUTPUT

      # - name: Checkout code
      #   uses: actions/checkout@v2
      # - name: Build project
      #   run: |
      #     npm install
      #     npm run electron:linux
      #     zip Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip "release/Keira3 ${{ steps.version.outputs.PACKAGE_VERSION }}.exe"
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip
      #     asset_name: Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip
      #     asset_content_type: application/zip



  build-on-mac:
    needs: build-on-linux
    name: Upload Mac Release Asset
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${{ needs.build-on-linux.outputs.version }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.PACKAGE_VERSION }}
          release_name: ${{ steps.version.outputs.PACKAGE_VERSION }}
          draft: true
          prerelease: false
          files: Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.MAC.dmg.zip
      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   run: touch file.txt
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: file.txt
      #     asset_name: file.txt
      #     tag: ${{ steps.version.outputs.PACKAGE_VERSION }}
      #     overwrite: true
      #     body: "This is my release text"

  # build-on-windows:
  #   needs: build-on-linux
  #   name: Upload Windows Release Asset
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Build project
  #       run: |
  #         npm install
  #         npm run electron:windows
  #         zip Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip "release/Keira3 ${{ steps.version.outputs.PACKAGE_VERSION }}.exe"
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.ref }}
  #         release_name: Release ${{ github.ref }}
  #         draft: false
  #         prerelease: false
  #     - name: Upload Release Asset
  #       id: upload-release-asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip
  #         asset_name: Keira3-${{ steps.version.outputs.PACKAGE_VERSION }}.WINDOWS.exe.zip
  #         asset_content_type: application/zip
