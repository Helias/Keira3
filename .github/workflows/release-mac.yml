on:
  push:
    # tags:
    # - 'v*'

name: Upload Release Asset

jobs:
  build-on-linux:
    name: Get Package Version and upload Linux release asset
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.PACKAGE_VERSION }}
      app_name: ${{ steps.app_name.outputs.APP_NAME }}
      fix_app_name: ${{ steps.fix_app_name.outputs.FIX_APP_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: version
        run: |
          npm i -g json
          echo "PACKAGE_VERSION=$(json version -a < package.json)" >> $GITHUB_OUTPUT
      - id: app_name
        run: |
          npm i -g json
          echo "APP_NAME=$(json name -a < package.json)" >> $GITHUB_OUTPUT
      - id: fix_app_name
        # remove 3 from "Keira3"
        run: |
          npm i -g json
          FIX_APP_NAME=$(echo "$(json name -a < package.json)" | sed s/3//g)
          echo "FIX_APP_NAME=$FIX_APP_NAME" >> $GITHUB_OUTPUT

  # build-on-mac:
  #   needs: build-on-linux
  #   name: Upload Mac Release Asset
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Build project
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         npm install
  #         npm run electron:mac
  #         zip ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.MAC.dmg.zip "release/${{needs.build-on-linux.outputs.app_name}}-${{needs.build-on-linux.outputs.version}}.dmg"
  #     - name: Create Release
  #       id: create_release
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{needs.build-on-linux.outputs.version}}
  #         release_name: ${{needs.build-on-linux.outputs.version}}
  #         draft: true
  #         prerelease: false
  #         files: ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.MAC.dmg.zip
  #     # - name: Upload binaries to release
  #     #   uses: svenstaro/upload-release-action@v2
  #     #   run: touch file.txt
  #     #   with:
  #     #     repo_token: ${{ secrets.GITHUB_TOKEN }}
  #     #     file: file.txt
  #     #     asset_name: file.txt
  #     #     tag: ${{needs.build-on-linux.outputs.version}}
  #     #     overwrite: true
  #     #     body: "This is my release text"

  build-on-windows:
    needs: build-on-linux
    name: Upload Windows Release Asset
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm run electron:windows
          move "release/${{needs.build-on-linux.outputs.app_name}} ${{needs.build-on-linux.outputs.version}}.exe" ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.WINDOWS.exe
          7z a ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.WINDOWS.exe.zip ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.WINDOWS.exe
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.build-on-linux.outputs.version}}
          release_name: ${{needs.build-on-linux.outputs.version}}
          draft: true
          prerelease: false
          files: ${{needs.build-on-linux.outputs.fix_app_name}}-${{needs.build-on-linux.outputs.version}}.WINDOWS.exe.zip
